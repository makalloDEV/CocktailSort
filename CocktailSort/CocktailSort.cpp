#include <iostream>

/*
Сортировка шейкером - усовершенствованная версия сортировки пузырьком.

В данной сортировке за одну итерацию внешнего цикла происходит 2 обхода массива в внутренних циклах.
В первом цикле происходит обход цикла слева направо, тем самым наибольший элемент оказывается справа и условная правая граница массива уменьшается на 1,
так как нет дальнейшего смысла работать со значением, которое уже находится на свое месте.

Точно такой принцип и у второго цикла, он обходит массив справа налево, перемещая наименьшее значение влево, граница также уменьшается на 1.

Таким образом, данный алгоритм обрабатывает неупорядоченный массив в установленных границах, перемещая до границы большее или меньшее число.



*/ 

using namespace std;
int main()
{
	setlocale(LC_ALL, "RU");

	int m[100];
	int n;

	cout << "Введите количество элементов массива (до 100): ";

	cin >> n;

	for (int i = 0; i < n; i++)
	{
		cin >> m[i];
	}

	cout << endl;

	cout << "До сортировки: ";
	for (int i = 0; i < n; i++)
	{
		cout << m[i] << " ";
	}
	
	cout << endl;

	int right = n - 1;
	int left = 1;

	while (left <= right)
	{
		bool isSorted = true;
		
		cout << endl;

		for (int i = left; i <= right; i++) // 9, 7, 6, 5, 4 | m[left] = 7, right = 4
		{
			if (m[i] < m[i - 1])
			{
				swap(m[i], m[i - 1]); // 9 < 7 -> m = 7, 9, 6, 5, 4
				isSorted = false;
			}


		}
		right--; // m = 7, 6, 5, 4, (9) | right = 3

		for (int i = right; i >= left; i--) // 7, 6, 5, 4, (9) | m[right] = 4, left = 1
		{
			if (m[i] < m[i - 1]) 
			{
				swap(m[i], m[i - 1]); // 4 < 5 -> 7, 6, 4, 5, (9) 
				isSorted = false;
			}
		}
		left++; // (4), 7, 6, 5, (9) | left = 2

		if (isSorted)
		{
			break;
		}

		cout << "Сортировка: ";
		for (int i = 0; i < n; i++)
		{
			{
				cout << m[i] << " ";
			}
		}

		cout << endl;
	}

	cout << endl;
	cout << "После сортировки: ";
	for (int i = 0; i < n; i++)
	{
		cout << m[i] << " ";
	}

	cout << endl;
}



